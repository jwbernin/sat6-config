---
# tasks file for sat6-config
- name: Get Organization ID
  uri:
    return_content: true
    user: "{{ satellite_user }}"
    password: "{{ satellite_password }}"
    validate_certs: no
    url: "https://{{ satellite_host }}/katello/api/organizations"
    force_basic_auth: true
  register: orglist

- name: Extract results JSON
  set_fact:
    results_org: "{{ orglist.content | from_json }}"

- name: Set Org ID
  set_fact:
    org_id: "{{ results_org.results[0].id }}"

- name: Set Org Name
  set_fact:
    org_name: "{{ results_org.results[0].name }}"

- name: upload manifest to Satellite
  katello_manifest:
    username: "{{ satellite_user }}"
    password: "{{ satellite_password }}"
    server_url: "https://{{ satellite_host }}"
    verify_ssl: false
    organization: "{{ org_name }}"
    manifest_path: "{{ manifest }}"
    state: present
  when: not skip_manifest

- name: Enable Upstream repositories
  katello_repository_set:
    username: "{{ satellite_user }}"
    password: "{{ satellite_password }}"
    server_url: "https://{{ satellite_host }}"
    verify_ssl: false
    organization: "{{ org_name }}"
    label: "{{ item.name }}"
    repositories:
      - releasever: "{{ item.release | default (omit)}}"
        basearch: "{{ item.arch }}"
    state: enabled
  loop: "{{ repos }}"

- name: Get all repositories
  foreman_search_facts:
    username: "{{ satellite_user }}"
    password: "{{ satellite_password }}"
    server_url: "https://{{ satellite_host }}"
    verify_ssl: false
    resource: repositories
  register: repositories

- name: Set download policy
  katello_repository:
    username: "{{ satellite_user }}"
    password: "{{ satellite_password }}"
    server_url: "https://{{ satellite_host }}"
    verify_ssl: false
    organization: "{{ org_name }}"
    name: "{{ item.name }}"
    download_policy: immediate
    content_type: yum
    product: "{{ item.product.name }}"
  loop: "{{ repositories.resources }}"

- debug:
    var: repositories

- fail:
    msg: Failing early - syncs not getting kicked off properly.

- name: Kick off repository Sync tasks
  katello_sync:
    username: "{{ satellite_user }}"
    password: "{{ satellite_password }}"
    server_url: "https://{{ satellite_host }}"
    verify_ssl: false
    product: "{{ item.product.name }}"
    repository:  "{{ item.name }}"
    organization: "Default Organization"
  loop: "{{ repositories.resources }}"
  when: item.url  # Not all repositories have a URL
  async: 999999
  poll: 0
  register: repo_sync_sleeper

- name: Build lifecycle environments
  katello_lifecycle_environment:
    name: "{{ item.name }}"
    organization: "{{ org_name }}"
    prior: "{{ item.prior | default ('Library') }}"
    state: present
    username: "{{ satellite_user }}"
    password: "{{ satellite_password }}"
    server_url: "https://{{ satellite_host }}"
    verify_ssl: false
  loop: "{{ le_pairs }}"

- name: Wait until all Syncs have finished
  async_status:
    jid: "{{ repo_sync_sleeper_item.ansible_job_id }}"
  loop: "{{ repo_sync_sleeper.results }}"
  loop_control:
    loop_var: repo_sync_sleeper_item
  when: repo_sync_sleeper_item.ansible_job_id is defined  # Skip items that were skipped in the previous task
  register: async_job_result
  until: async_job_result.finished
  retries: 999
  delay: 10
